#!/bin/bash

function usage() {
	cat <<EOF
Usage:	$(basename $0) <command> [--version] [--test] [--hash] [<args>]

available commands:
  build		creates tcos packages
  clean		removes temporary build files in debian/*
  config	allows to view and set the remote server settings
  genpackage	generates package skeleton
  upload	uploads a deb file to a repository

EOF
exit 65
}
function usage_clean() {
	cat <<EOF
Usage: $basename $0) clean

EOF
exit 65
}
function usage_config() {
    	cat <<EOF
Usage: $(basename $0) config [get] [set] [<args>]

available commands:
  get 		reads the value of the configuration variable
  set		! writes the value of the configuration variable (not implemented yet) !

arguments:
  --server	reads the values for another server definition 

example:
$ tcos config set remote="root@httpd"
$ tcos config get dir

 dir="/var/www-vhosts/archive.openthinclient.org/openthinclient/customer"

EOF
exit 65
}

function usage_build() {
    cat <<EOF
Usage: $(basename $0) build [--test] .

arguments:
  --test	warning: this builds and uploads the package directly to the server
  --base	enables the infamous "unknown-is-real-option" of fakeroot
  --server	reads the values for another server definition 

EOF
exit 65
}

function usage_upload() {
    cat <<EOF
Usage: $(basename $0) upload [--server] [--hash] [<args>]

arguments:
  --server	chooses a server from the .tcosconfig file
  --hash	adds a hash to the directory
  <args>	path to the deb-file

EOF
exit 65
}

function usage_genpackage() {
    cat <<EOF
Usage: $(basename $0) genpackage package [<args>]

arguments:
  package	name of the package
  <args>	additional options for dh_make

EOF
exit 65
}

function sourced() {
      local -i rc=1
      [[ 'source' ==  ${FUNCNAME[1]} ]] && rc=0
      return $rc
}

# __main__

sourced ||  usage $@
