#!/bin/bash
#
# tcos helper utility to:
# - build
# - upload
#
# Copyright (C) 2014 openthinclient GmbH All Rights Reserved.
#
# Author: Steffen HÃ¶nig
#
#

VERSION=0.1
REMOTE=root@172.21.44.2
DIR=/var/www-vhosts/archive.openthinclient.org/openthinclient/customer
SERVER=http://archive.openthinclient.org/openthinclient/customer
HASH=$(/usr/bin/pwgen -s 8 1)
ARCH=i386

usage() {
	cat <<EOF
Usage:	$(basename $0) <command> [--version] [--test] [--hash] [<args>]

available commands:
  build		creates tcos packages
  config	allows to view and set the remote server settings
  upload	uploads a deb file to a repository

EOF
exit 65
}

usage_config() {
    	cat <<EOF
Usage: $(basename $0) config [get] [set] [<args>]

available commands:
  get 		reads the value of the configuration variable
  set		writes the value of the configuration variable

example:
$ tcos config set remote="root@httpd"
$ tcos config get dir

 dir="/var/www-vhosts/archive.openthinclient.org/openthinclient/customer"

EOF
exit 65
}

usage_build() {
    cat <<EOF
Usage: $(basename $0) build [--test]

arguments:
  --test	warning: this builds and uploads the package directly to the server

EOF
exit 65
}

usage_upload() {
    cat <<EOF
Usage: $(basename $0) upload [--server] [--hash] [<args>]

arguments:
  --server	chooses a server from the .tcosconfig file
  --hash	adds a hash to the directory
  <args>	path to the deb-file

EOF
exit 65
}

# build or upload? (or config?)

key="$1"

case $key in
    build)
	build=true
	usage_build
	;;
    config)
	config=true
	usage_config
	;;
    upload)
	upload=true
	usage_upload
	;;
    -v|--version|version)
	echo -e "$(basename $0) utility. version: $VERSION"
	exit 65
	;;
    *)
	usage
	;;
esac


upload_file() {
    remote=$1
    path=$2
    file=$3
    prefix=$4

    # stream the file over a pipe to ssh
    cat $file | ssh $remote "mkdir -p $path/${prefix}_$HASH; cat >> $path/${prefix}_$HASH/`basename $file`"
}

update_metadata() {
    remote=$1
    path=$2

    #
    ssh $remote "cd $path/${prefix}_$HASH; apt-ftparchive packages . > Packages; gzip -9cf < Packages > Packages.gz ; bzip2 -9cf < Packages > Packages.bz2; \
	    		         apt-ftparchive sources . > Sources; gzip -9cf < Sources > Sources.gz; bzip2 -9cf < Sources > Sources.bz2; \
			         apt-ftparchive release . > Release \
	        "
}
# Check arguments
if [ $# -ge 1 ]; then
        DEBS="$@"
	[ -n "$2" ] && HASH="$2"
else
        usage
        exit
fi

# Uploading packages

for d in $DEBS
do
   if echo $d | /bin/grep -qs "\.deb$"
   then
       bn=$(basename $d)
       dn=$(dirname $d)
       base=${bn%%_*b}
       changelog=${dn}/${base}.changelog
       version=$(grep -m 1 -i $base $changelog | awk '{print $2}' | tr -d '()')
       changes=${dn}/${base}_${version}_${ARCH}.changes
       dsc=${dn}/${base}_${version}.dsc
       tgz=${dn}/${base}_${version}.tar.gz
       echo -e "Uploading:\n"
       for f in $d $dsc $changes $changelog $tgz
       do
	   echo -e "--> $f\n"
           upload_file $REMOTE $DIR $f $base
       done
       echo -e "Generating: Packages.gz\n"
       update_metadata $REMOTE $DIR

       echo -e "Insert the following line to your sources.list:\ndeb ${SERVER}/${prefix}_${HASH} ./\n"
    fi
done
